services:
  db:
    container_name: db
    profiles: [prod, dev]
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: always

  backend:
    build: ./backend
    profiles: [prod, dev]
    image: ian1dunn/linkshortener-backend:latest
    container_name: backend
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
    restart: always

  frontend-dev:
    build: ./frontend
    profiles: [dev]
    image: ian1dunn/linkshortener-frontend:latest
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend/.nginx/nginx-dev.conf:/etc/nginx/conf.d/nginx-dev.conf:ro
    restart: always

  frontend-prod:
    build: ./frontend
    profiles: [prod]
    image: ian1dunn/linkshortener-frontend:latest
    container_name: frontend
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./frontend/.nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf:ro
      - ./frontend/.certbot/www/:/var/www/certbot/:ro
      - ./frontend/.certbot/conf/:/etc/nginx/ssl/:ro
    restart: always

  certbot:
    profiles: [prod,certbot]
    image: certbot/certbot:latest
    volumes:
      - ./frontend/.certbot/www/:/var/www/certbot/:rw
      - ./frontend/.certbot/conf/:/etc/letsencrypt/:rw